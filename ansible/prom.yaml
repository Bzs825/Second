---
- hosts: multipass
  become: yes
  vars:
    prometheus_staging_directory: "/home/{{ ansible_user }}/ansible/temp"

  tasks:
# sudo groupadd --system prometheus
  - name: Create prometheus user group
    group:
      name: prometheus
      state: present

# sudo useradd -s /sbin/nologin --system -g prometheus prometheus
  - name: Create user for prometheus service
    user:
      name: prometheus
      shell: /sbin/nologin
      system: true
      state: present

# sudo mkdir /var/lib/prometheus
  - name: Create /var/lib/prometheus
    file:
      path: /var/lib/prometheus
      state: directory

# for i in rules rules.d files_sd; do sudo mkdir -p /etc/prometheus/${i}; done
  - name: Create /etc/prometheus/rules.d
    file:
      path: /etc/prometheus/rules.d
      state: directory

  - name: Create /etc/prometheus/files_sd
    file:
      path: /etc/prometheus/files_sd
      state: directory

# sudo apt update
# sudo apt -y install wget curl
  - name: Run the equivalent of "apt-get update" as a separate step
    apt:
      update_cache: true
      cache_valid_time: 3600

  - name: Install dependencies for Prometheus
    apt:
      name: ['wget', 'curl'] 
      state: latest

  - name: Enable Microk8s addons
    become: yes
    shell: microk8s enable prometheus dns dashboard metrics-server

# mkdir -p /tmp/prometheus && cd /tmp/prometheus
# curl -s https://api.github.com/repos/prometheus/prometheus/releases/latest | grep browser_download_url | grep linux-amd64 | cut -d '"' -f 4 | wget -qi -
  - name: "Create {{ prometheus_staging_directory }}"
    file:
      path: "{{ prometheus_staging_directory }}"
      state: directory

  - name: Download prometheus tar
    shell: curl -s https://api.github.com/repos/prometheus/prometheus/releases/latest | grep browser_download_url | grep linux-amd64 | cut -d '"' -f 4 | wget -qi -
    args:
      chdir: "{{ prometheus_staging_directory }}"

  - name: Register tar path (can be left out when no dev env - precise package name!)
    find: paths="{{ prometheus_staging_directory }}" patterns="prometheus*.tar.gz"
    register: prometheus_tar_location

  - name: Unzip prometheus tar
    unarchive: src="{{ item.path }}" remote_src=yes dest="{{ prometheus_staging_directory }}"
    with_items: "{{ prometheus_tar_location.files }}"

    
# tar xvf prometheus*.tar.gz
# cd prometheus*/
# sudo mv prometheus promtool /usr/local/bin/
  - name: Move prometheus binaries to their desired location 
    shell: 'mv "{{ prometheus_staging_directory }}"/prometheus*.linux-amd64/prometheus "{{ prometheus_staging_directory }}"/prometheus*.linux-amd64/promtool /usr/local/bin/'

# sudo mv consoles/ console_libraries/ /etc/prometheus/
  - name: Create directories for prometheus functionalities
    shell: 'mv "{{ prometheus_staging_directory }}"/prometheus*.linux-amd64/consoles/ "{{ prometheus_staging_directory }}"/prometheus*.linux-amd64/console_libraries/ /etc/prometheus/'

  - name: Create prometheus systemd service
    copy:
      src: /mnt/c/users/bzs/workspace/ansible/prometheus.service
      dest: /etc/systemd/system/

  - name: Set ownership of prometheus directories /etc/prometheus
    file:
      path: /etc/prometheus/files_sd
      state: directory
      owner: prometheus
      group: prometheus
      recurse: yes

  - name: Set mode for prometheus directories /etc/prometheus
    file:
      path: /etc/prometheus/rules.d
      state: directory
      mode: '775'
      recurse: yes

  - name: Set ownership of prometheus directories /var/lib/prometheus
    file:
      path: /var/lib/prometheus
      state: directory
      owner: prometheus
      group: prometheus
      recurse: yes  

  - name: Move prometheus.yml to /etc/prometheus
    copy:
      src: /mnt/c/users/bzs/workspace/ansible/prometheus.yml
      dest: /etc/prometheus/

  - name: Start & enable Prometheus service
    systemd:
      daemon_reload: yes
      state: started
      name: prometheus
      enabled: yes

